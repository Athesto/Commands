ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš© Base de React ==========================================================

npm init -y

Create React app

npx create-react-app [nombre_app]

npm run start

ğŸš©ğŸš©ğŸš©ğŸš©ğŸš©ğŸš© Instalar React sin base ==================================================

npm init -y

Estructura de carpetas

- public
	- index.html
- src
	- components
	- index.js
- package.json

npm install react react-dom

Instalar Babel ğŸš€ğŸš€ğŸš€ğŸš€ğŸš€ ====================================================

Solo para desarrollo

npm install @babel/core babel-loader @babel/preset-env @babel/preset-react --save-dev

Crear archivo en raiz de proyecto

.babelrc

{
    "presets": [
        "@babel/preset-env",
        "@babel/preset-react"
    ]
}

Webpack ğŸš€ğŸš€ğŸš€ğŸš€ğŸš€ ====================================================

npm install webpack webpack-cli html-webpack-plugin html-loader --save-dev

const path = require("path");
const HtmlWebPackPlugin = require("html-webpack-plugin");
module.exports = {
  entry: "./src/index.js",
  output: {
    path: path.resolve(__dirname, "dist"),
    filename: "bundle.js",
  },
  resolve: {
    extensions: [".js", ".jsx"],
  },
  module: {
    rules: [
      {
        test: /\.(js|jsx)$/,
        exclude: /node_modules/,
        use: {
          loader: "babel-loader",
        },
      },
      {
        test: /\.html$/,
        use: [
          {
            loader: "html-loader",
          },
        ],
      },
    ],
  },
  plugins: [
    new HtmlWebPackPlugin({
      template: "./public/index.html",
      filename: "./index.html",
    }),
  ],
};

package json script:

"build": "webpack --mode production"

npm run build = compile


Webpack Dev Server ğŸš€ğŸš€ğŸš€ğŸš€ğŸš€ ====================================================

npm install webpack-dev-server --save-dev

Package json script

"start": "webpack serve --mode development --env development"


SASS ğŸš€ğŸš€ğŸš€ğŸš€ğŸš€ ====================================================================

npm install mini-css-extract-plugin css-loader node-sass sass-loader --save-dev

ESLINT ğŸš€ğŸš€ğŸš€ğŸš€ğŸš€ ==================================================================

npm install eslint babel-eslint eslint-config-airbnb eslint-plugin-import eslint-plugin-react eslint-plugin-jsx-a11y

WEBPACK LOADER para archivos ğŸš€ğŸš€ğŸš€ğŸš€ğŸš€ ==================================================================

npm install file-loader --save-dev

webpack.config.js

{
	test: /\.(png|jpe?g|gif)$/,
	use: [
	  {
		loader: "file-loader",
		options: {
		  name: "assets/[hash].[ext]",
		},
	  },
	],
},


JSON SERVER ğŸš€ğŸš€ğŸš€ğŸš€ğŸš€ ==================================================================
	  
sudo npm install -g json-server

json-server file.json


Prop-types ğŸš€ğŸš€ğŸš€ğŸš€ğŸš€ ==================================================================

npm install prop-types


